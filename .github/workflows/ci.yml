name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUBY_PLATFORM: ruby

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['3.0', '3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Create coverage directory
      run: mkdir -p coverage

    - name: Run tests
      run: |
        bundle exec rake coverage:report
      env:
        COVERAGE: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.ruby-version == '3.3'
      with:
        files: ./coverage/coverage.xml,./coverage/.resultset.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Run RuboCop
      run: bundle exec rubocop --parallel --format github

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Run bundler-audit
      run: |
        bundle exec bundler-audit check --update
        bundle exec bundler-audit check --format json --output bundler-audit.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: bundler-audit.json

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Build gem
      run: bundle exec gem build attio.gemspec

    - name: Check gem installation
      run: |
        gem_file=$(ls attio-*.gem | head -1)
        gem install "$gem_file"
        ruby -e "require 'attio'; puts 'Gem loads successfully'"

    - name: Upload gem artifact
      uses: actions/upload-artifact@v4
      with:
        name: gem-build
        path: attio-*.gem